{"version":3,"sources":["Text-Editor.js","App.js","index.js"],"names":["TextArea","props","handleChange","event","setState","value","target","state","bind","handleUpperCase","handleLowerCase","handleTitleCase","handleSentenceCase","this","toUpperCase","preventDefault","toLowerCase","text","split","map","word","charAt","slice","join","replace","letter","trim","className","onClick","type","name","placeholder","onChange","Component","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oNAIqBA,G,wDACjB,WAAYC,GAAO,IAAD,8BACd,cAAMA,IAaVC,aAAe,SAAAC,GACX,EAAKC,SAAS,CAAEC,MAAOF,EAAMG,OAAOD,SAZpC,EAAKE,MAAQ,CAAEF,MAAO,IAEtB,EAAKH,aAAe,EAAKA,aAAaM,KAAlB,gBAEpB,EAAKC,gBAAkB,EAAKA,gBAAgBD,KAArB,gBACvB,EAAKE,gBAAkB,EAAKA,gBAAgBF,KAArB,gBACvB,EAAKG,gBAAkB,EAAKA,gBAAgBH,KAArB,gBACvB,EAAKI,mBAAqB,EAAKA,mBAAmBJ,KAAxB,gBAVZ,E,4DAkBFL,GACZU,KAAKT,SAAS,CAACC,MAAOQ,KAAKN,MAAMF,MAAMS,gBACvCX,EAAMY,mB,sCAGMZ,GACZU,KAAKT,SAAS,CAACC,MAAOQ,KAAKN,MAAMF,MAAMW,gBACvCb,EAAMY,mB,sCAGMZ,GACZ,IAAIc,EAAOJ,KAAKN,MAAMF,MAEtBY,EAAOA,EAAKD,cAAcE,MAAM,KAAKC,KAAI,SAASC,GAC9C,OAAQA,EAAKC,OAAO,GAAGP,cAAgBM,EAAKE,MAAM,MACnDC,KAAK,KAERV,KAAKT,SAAS,CAACC,MAAOY,IACtBd,EAAMY,mB,yCAGSZ,GACf,IAAIc,EAAOJ,KAAKN,MAAMF,MAGtBY,GAFAA,EAAOA,EAAKD,eAEAQ,QAAQ,wBAAwB,SAASC,GACjD,OAAOA,EAAOX,iBACfY,OAEHb,KAAKT,SAAS,CAACC,MAAOY,IACtBd,EAAMY,mB,+BAIN,OACI,yBAAKY,UAAU,iBACX,0BAAMA,UAAU,kBAEZ,yBAAKA,UAAU,WACX,4BAAQA,UAAU,SAASC,QAASf,KAAKF,gBAAiBkB,KAAK,UAA/D,cACA,4BAAQF,UAAU,SAASC,QAASf,KAAKJ,gBAAiBoB,KAAK,UAA/D,cACA,4BAAQF,UAAU,SAASC,QAASf,KAAKH,gBAAiBmB,KAAK,UAA/D,cACA,4BAAQF,UAAU,SAASC,QAASf,KAAKD,mBAAoBiB,KAAK,UAAlE,kBAGJ,8BACIC,KAAK,OACLH,UAAU,YACVI,YAAY,yBACZ1B,MAAOQ,KAAKN,MAAMF,MAClB2B,SAAUnB,KAAKX,gBAIvB,8BAEA,8BAEA,8BAEA,yBAAKyB,UAAU,OACX,yBAAKA,UAAU,UACX,yBAAKA,UAAU,QACX,0CACA,0VAOR,yBAAKA,UAAU,UACX,yBAAKA,UAAU,QACX,0CACA,kWAOR,yBAAKA,UAAU,UACX,yBAAKA,UAAU,QACX,0CACA,sTAMR,yBAAKA,UAAU,UACX,yBAAKA,UAAU,QACX,4CACA,sW,GAhHUM,cCKvBC,MANf,WACE,OACE,kBAAC,EAAD,OCDJC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.5fef7b24.chunk.js","sourcesContent":["import React, { Component } from 'react'\n\nimport './styles.css'\n\nexport default class TextArea extends Component{\n    constructor(props){\n        super(props)\n        \n        this.state = { value: \"\" }\n\n        this.handleChange = this.handleChange.bind(this)\n\n        this.handleUpperCase = this.handleUpperCase.bind(this)\n        this.handleLowerCase = this.handleLowerCase.bind(this)\n        this.handleTitleCase = this.handleTitleCase.bind(this)\n        this.handleSentenceCase = this.handleSentenceCase.bind(this)\n\n    }\n\n    handleChange = event => {\n        this.setState({ value: event.target.value })\n    }\n\n    handleUpperCase(event){\n        this.setState({value: this.state.value.toUpperCase()})\n        event.preventDefault()\n    }\n\n    handleLowerCase(event){\n        this.setState({value: this.state.value.toLowerCase()})\n        event.preventDefault()\n    }\n\n    handleTitleCase(event){\n        let text = this.state.value\n\n        text = text.toLowerCase().split(' ').map(function(word) {\n            return (word.charAt(0).toUpperCase() + word.slice(1));\n        }).join(' ');\n        \n        this.setState({value: text})\n        event.preventDefault()\n    }\n\n    handleSentenceCase(event){\n        let text = this.state.value\n        text = text.toLowerCase()\n\n        text = text.replace(/(^\\s*\\w|[.!?]\\s*\\w)/g, function(letter){\n            return letter.toUpperCase();    \n        }).trim();\n        \n        this.setState({value: text})\n        event.preventDefault()\n    }\n\n    render (){ \n        return(\n            <div className=\"container-all\">\n                <form className=\"container-text\">\n\n                    <div className=\"toolbar\">\n                        <button className=\"button\" onClick={this.handleTitleCase} type=\"submit\">Title Case</button>\n                        <button className=\"button\" onClick={this.handleUpperCase} type=\"submit\">Upper Case</button>\n                        <button className=\"button\" onClick={this.handleLowerCase} type=\"submit\">Lower case</button>\n                        <button className=\"button\" onClick={this.handleSentenceCase} type=\"submit\">Sentence Case</button>\n                    </div>\n\n                    <textarea\n                        name=\"text\"\n                        className=\"text-area\" \n                        placeholder='Digite ou Cole o Texto'\n                        value={this.state.value}\n                        onChange={this.handleChange}\n                    />\n                </form>\n\n                <div></div>\n\n                <div></div>\n\n                <div></div>\n\n                <div className=\"row\">\n                    <div className=\"column\">\n                        <div className=\"card\">\n                            <h3>Title Case</h3>\n                            <p>\n                                O Text Editor é perfeito para quem não sabe como nomear um próximo ensaio. Essencialmente, garante que as letras corretas sejam maiúsculas no contexto de um título. \n                                Palavras como \"ara\" ficarão todas em minúsculas e as palavras importantes serão convertidas. Selecione o Campo \"Title Case\".\n                            </p>\n                        </div>\n                    </div>\n\n                    <div className=\"column\">\n                        <div className=\"card\">\n                            <h3>Upper Case</h3>\n                            <p>\n                                O transformador em maiúsculas aceita qualquer texto que você possui e gera todas as letras em maiúsculas. Essencialmente, transformará todas as letras minúsculas em maiúsculas.\n                                Para fazer isso, basta selecionar o texto que você precisa alterar e colar na caixa acima e selecionar a guia \"Upper Case\".\n                            </p>\n                        </div>\n                    </div>\n\n                    <div className=\"column\">\n                        <div className=\"card\">\n                            <h3>Lower Case</h3>\n                            <p>\n                                Se você está se perguntando como remover o texto em maiúsculas, ele transforma todas as letras do texto em letras minúsculas. Simplesmente copie o texto que você precisa gerar em letras minúsculas e cole o texto na caixa acima e selecione a guia \"Lower Case\".\n                            </p>\n                        </div>\n                    </div>\n\n                    <div className=\"column\">\n                        <div className=\"card\">\n                            <h3>Sentece Case</h3>\n                            <p>\n                                O conversor permitirá que você cole qualquer texto que desejar e o transformará automaticamente em uma sentença estruturada.\n                                Funciona com letras maiúsculas na primeira letra de cada frase após um ponto. A primeira letra do texto também é incluida, cole o texto e selecione campo \"Sentence Case\".\n                            </p>\n                        </div>\n\n                    </div>\n                </div>\n\n            </div>\n        )\n    }\n}\n\n","import React from 'react';\nimport TextEditor from './Text-Editor'\n\nfunction App() {\n  return (\n    <TextEditor/>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}